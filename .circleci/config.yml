# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: docker network inspect bridge
          command: docker network inspect bridge
      - run:
          name: set up db
          command: >
            docker-compose run --rm
            -e RAILS_ENV=test
            -e AWS_ACCESS_KEY_ID
            -e AWS_SECRET_ACCESS_KEY
            -e AWS_PLATFORM_APPLICATION_APNS
            -e ES_HOST
            -e REDIS_HOST
            api bundle exec rake db:create db:schema:load --trace
      - run:
          name: lint
          command: >
            docker-compose run --rm
            api bundle exec rubocop
      - run:
          name: test
          command: >
            docker-compose run --rm
            -e RAILS_ENV=test
            -e AWS_ACCESS_KEY_ID
            -e AWS_SECRET_ACCESS_KEY
            -e AWS_PLATFORM_APPLICATION_APNS
            -e ES_HOST
            -e REDIS_HOST
            api bundle exec rspec
      - run:
          name: docker-compose down
          command: docker-compose down
  deploy_staging:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: build
          command: >
            docker build
            --no-cache
            --build-arg AWS_KMS_KEY_ID=$AWS_KMS_KEY_ID
            --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            -t eutopia-staging-$CIRCLE_BRANCH:$CIRCLE_SHA1
            -f dockers/staging/Dockerfile .
      - run:
          name: login
          command: eval '$(aws ecr get-login --no-include-email --region ap-northeast-1)'
      - run:
          name: tag
          command: docker tag eutopia-staging-$CIRCLE_BRANCH:$CIRCLE_SHA1 $AWS_ECS_URI/eutopia-staging:latest
      - run:
          name: push
          command: docker push $AWS_ECS_URI/eutopia-staging:latest
  deploy_production:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: build
          command: >
            docker build
            --no-cache
            --build-arg AWS_KMS_KEY_ID=$AWS_KMS_KEY_ID
            --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            -t eutopia-production-$CIRCLE_BRANCH:$CIRCLE_SHA1
            -f dockers/production/Dockerfile .
      - run:
          name: login
          command: eval '$(aws ecr get-login --no-include-email --region ap-northeast-1)'
      - run:
          name: tag
          command: docker tag eutopia-production-$CIRCLE_BRANCH:$CIRCLE_SHA1 $AWS_ECS_URI/eutopia-production:latest
      - run:
          name: push
          command: docker push $AWS_ECS_URI/eutopia-production:latest

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - release
                - master
      - deploy_staging:
          filters:
            branches:
              only: develop
      - deploy_production:
          filters:
            branches:
              only: release
